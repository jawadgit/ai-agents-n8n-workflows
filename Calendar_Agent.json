{
  "name": "jawad 365 Calendar Agent",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4-turbo",
        "options": {}
      },
      "id": "a4f6073f-ebe8-4444-9673-61978c15279e",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -928,
        368
      ],
      "credentials": {
        "openAiApi": {
          "id": "BtnSPiglX9etRCup",
          "name": "365 Global OpenAi Key"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "value": "Unable to perform task. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2c688cf3-521a-42b6-a6eb-de1817dd3fe1",
      "name": "Try Again",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        208
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b56ae3b4-d1ce-487f-a946-5ea43d11ca7f",
      "name": "Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=ðŸ“œ Calendar Assistant Routing Rules (Improved)\nTools\n\nCreate Event with Attendee â†’ Use if an event includes a participant.\n\nCreate Event â†’ Use if solo event.\n\nGet Events â†’ Always use first when fetching events, or before deleting/updating.\n\nDelete Event â†’ Must only be called after Get Events has returned the correct event ID.\n\nUpdate Event â†’ Must only be called after Get Events has returned the correct event ID.\n\nðŸš¦ Delete Event Rule (Enforced Sequence)\n\nWhen the user requests to delete an event:\n\nFirst: Call Get Events using the provided filters (title, date, time, keywords).\n\nThen: From the returned results, identify the event and extract its eventId.\n\nFinally: Call Delete Event with that eventId.\n\nNever call Delete Event directly from user input. Always resolve the ID first via Get Events.\n\nðŸš¦ Update Event Rule (Enforced Sequence)\n\nWhen the user requests to update an event:\n\nFirst: Call Get Events using the provided filters.\n\nThen: Select the event and extract its eventId.\n\nFinally: Call Update Event with that eventId plus the new details.\n\nNever call Update Event directly. Always resolve the ID first.\n\nðŸ—“ Example â€” Delete Flow\n\nUser:\n\ndelete event titled \"Regarding the personal assistant\" on 2025-08-18 from 15:00 to 16:00\n\nAssistant Execution:\n\nCall â†’ Get Events with filters: { title: \"Regarding the personal assistant\", date: \"2025-08-18\", time: \"15:00â€“16:00\" }\n\nParse results â†’ find eventId (e.g., abc123).\n\nCall â†’ Delete Event with { eventId: \"abc123\" }.\n\n\ncurrent date/time: {{ $now }}"
        }
      },
      "id": "edee569b-01cb-4c94-91d8-4569247eaa87",
      "name": "Calendar Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -688,
        112
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "jawwad.nissar@gmail.com",
          "mode": "list",
          "cachedResultName": "jawwad.nissar@gmail.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"eventAttendeeEmail\") }}"
          ],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -400,
        480
      ],
      "id": "f3dcb78d-c388-41d0-ae78-e1dfc2ed665a",
      "name": "Create Event with Attendee",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ZHfY8UgVKrmp8U5Y",
          "name": "jawad 365 Calendar Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "jawwad.nissar@gmail.com",
          "mode": "list",
          "cachedResultName": "jawwad.nissar@gmail.com"
        },
        "limit": 5,
        "timeMin": "={{ $fromAI(\"dayBefore\",\"the day before the date the user requested\") }}",
        "timeMax": "={{ $fromAI(\"dayAfter\",\"the day after the date the user requested\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -544,
        480
      ],
      "id": "56469696-6baa-43b7-a270-907e5361bc52",
      "name": "Get Events",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ZHfY8UgVKrmp8U5Y",
          "name": "jawad 365 Calendar Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "jawwad.nissar@gmail.com",
          "mode": "list",
          "cachedResultName": "jawwad.nissar@gmail.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -272,
        480
      ],
      "id": "8273428f-e3d0-404c-a299-7f08e3338b25",
      "name": "Delete Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "ZHfY8UgVKrmp8U5Y",
          "name": "jawad 365 Calendar Account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -928,
        112
      ],
      "id": "ad465ece-b1b5-40bc-9470-192be33a7a70",
      "name": "When Executed by Another Workflow"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "action=create, date=2025-08-20, time=18:00, event=testing events, attendees=[jawwad.nissar@gmail.com]"
        }
      }
    ]
  },
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with Attendee": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Calendar Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7e6d79b3-d925-47ec-bdc5-06416235472b",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e4f91be7e8b0224c0bb7b480ed50125789d11b2b2ff9873f895c36a04da3a00b"
  },
  "id": "ZhFsDf5qgwDi5PRt",
  "tags": []
}